@page "/tickets/create"

@attribute [Authorize(Roles = "Admin, Developer")]
@inject NavigationManager Navigation
@inject TicketService TicketService
@inject ProjectService ProjectService

<h3>Create Ticket</h3>
<hr />

<EditForm Model="ticket" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    @* this will validate the input against the fields mentioned in the model *@

    @if (projects == null)
    {
        <div>
            <p><em>@displayProjectsMessage</em></p>
        </div>
    }
    else
    {
        <div class="form-group">
            <label for="project-select" class="control-label">Project</label>
            @*TODO: Better to have a search here instead of a select? - select is ok for now*@
            <InputSelect id="project-select" class="custom-select" @bind-Value="@chosenProjectId">
                @foreach (var project in projects)
                    {
                    <option selected value="@project.Id">@project.Name</option>
                    }
            </InputSelect>
            <ValidationMessage For="@(()=>ticket.Project)" />
        </div>
    }


    <div class="form-group">
        <label for="description-input" class="control-label">* Ticket Description</label>
        <InputText id="description-input" class="form-control" @bind-Value="@ticket.Description"></InputText>
        <ValidationMessage For="@(()=>ticket.Description)" />
    </div>
    <div class="form-group">
        <label for="state-select" class="control-label">* Ticket State</label>
        <InputSelect id="state-select" class="custom-select" @bind-Value="@ticket.Status">
            <option selected value="@TicketStatus.Open">Open</option>
            <option value="@TicketStatus.InProgress">In Progress</option>
            <option value="@TicketStatus.Done">Done</option>
            <option value="@TicketStatus.ToDo">To Do</option>
            <option value="@TicketStatus.UnderReview">Under Review</option>
            <option value="@TicketStatus.Approved">Approved</option>
            <option value="@TicketStatus.Cancelled">Cancelled</option>
        </InputSelect>
        <ValidationMessage For="@(()=>ticket.Status)" />
    </div>
    <div>
        <label for="user-select">Assigned User/s</label>

        @* show chips of already assigned users and allow to remove with - button *@

        <input type="search" id="user-select" class="form-control"
               @bind-value="userSearchInput" @bind-value:event="oninput"
               @onkeypress="@SearchUsers" placeholder="Search Users" />
    </div>
    <div>
        <p></p>
        @* load users onenter in above search *@
        @*@bind-value="userIdToAdd" @bind-value:event="oninput"*@
    </div>

    <NavLink class="btn btn-outline-secondary" href="project-board">
        <span aria-hidden="true">Cancel</span>
    </NavLink>
    <button type="submit" class="btn btn-primary">Create Ticket</button>
</EditForm>

@code {
    private Ticket ticket { get; set; } = new Ticket();

    private String userSearchInput = "";
    // TODO: check an appropriate method to assign a user/ multiple users
    private String userIdToAdd;
    private List<ApplicationUser> assignedUsers;

    List<Project> projects;
    private Guid chosenProjectId;

    public String displayProjectsMessage = "Loading Projects";


    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        projects = await Task.Run(() => ProjectService.GetAllProjectsAsync());
        if (projects == null)
        {
            displayProjectsMessage = "No Projects found, please create a project first in the Projects page.";
        }
    }

    private void SearchUsers()
    {
        //params - userSearchInput
        //call user model with filter by name
        //searchedUsers =
    }

    protected async void HandleValidSubmit()
    {
        ticket.Project = projects.Find((project) => project.Id == chosenProjectId);
        ticket.Users = assignedUsers;

        await TicketService.InsertTicketAsync(ticket);
        Navigation.NavigateTo("project-board");
    }
}
