@page "/tickets/delete/{Id:guid}"

@attribute [Authorize(Roles = "Admin, Developer")]
@inject NavigationManager Navigation
@inject TicketService TicketService


@if (ticket == null)
{
    <p><em>@displayMessage</em></p>
}
else
{
    <h3>Are you sure you want to delete this Ticket?</h3>
    <hr />

    <dl class="row">
        <dt class="col-sm-2">
            Ticket Description
        </dt>
        <dd class="col-sm-10">
            @ticket.Description
        </dd>
        <dt class="col-sm-2">
            Ticket Status

        </dt>
        <dd class="col-sm-10">@ticket.Status</dd>

        <dt class="col-sm-2">
            Assigned Users
        </dt>
        @if (ticket.Users == null)
        {
            <dd class="col-sm-10">
                <em>None</em>
            </dd>
        }
        else
        {
            @foreach (var user in ticket.Users)
            {
                <dd class="col-sm-10">
                    @user.FirstName
                </dd>
            }

        }
    </dl>

    <button class="btn btn-danger" @onclick="DeleteTicket">
        <span class="oi oi-trash" aria-hidden="true"></span>Delete
    </button>
}


@code {
    [Parameter]
    public Guid Id { get; set; }

    public Ticket ticket { get; set; }
    public String displayMessage = "Loading Ticket Details";


    // Similar in Read
    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        ticket = await Task.Run(() => TicketService.GetTicketAsync(Id));
        if (ticket == null)
        {
            displayMessage = "Ticket with Id: " + Id + " Not Found";
        }
    }

    private async Task DeleteTicket()
    {
        await TicketService.DeleteTicketAsync(ticket);
        Navigation.NavigateTo("/project-board");        // redirect to project-board page
    }
}
