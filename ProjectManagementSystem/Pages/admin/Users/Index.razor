@page "/users"

@attribute [Authorize(Roles = "Admin")]
@inject UserService UserService

<h3>Users</h3>
<hr />

<div class="d-md-flex">
    @*TODO: Have input and buttons in the same line*@
    <input type="search" id="company-search" class="form-control"
           @bind-value="searchInput" @bind-value:event="oninput"
           @onkeyup="@EnterSearch" placeholder="Search Companies by Name" />
    <button class="btn btn-outline-primary" @onclick="HandleSearch">
        <span class="oi oi-magnifying-glass" aria-hidden="true"></span> Search
    </button>
    <button class="btn btn-outline-secondary" @onclick="ClearSearch">Clear Search</button>
</div>

@if (users == null || users.Count == 0)
{
    <p><em>@displayMessage</em></p>
}
else
{
    <UsersTable Users="users" />

}

@* TODO: Reposition button *@
    @*TODO: check if an admin is allowed to create users without registering? how to create a password? let new users reset their passwords after signing in.*@
<p>
    <a class="btn btn-primary" href="Identity/Account/Register"><span class="oi oi-plus" aria-hidden="true"></span> Create User</a>
</p>

@* display all available users in the system - allow to change user role (redirect to edit screen for now) *@

@code {
    List<ApplicationUser> users;
    public String displayMessage = "Loading Users";

    private String searchInput = "";

    protected override async Task OnInitializedAsync()
    {
        users = await Task.Run(() => UserService.GetAllUsersWithRolesAsync());
        if (users.Count == 0)
        {
            displayMessage = "No Users Found";
        }
    }

    private async Task EnterSearch(KeyboardEventArgs eventArgs)
    {
        if (eventArgs.Key == "Enter")
        {        // fire on enter
            await HandleSearch();
        }
        else if (eventArgs.Key == "Escape")
        {
            await ClearSearch();
        }
    }

    private async Task HandleSearch()
    {
        users = await UserService.SearchUsersAsync(searchInput);
        if (users.Count == 0)
        {
            displayMessage = "No Users with the name: " + searchInput + " were found.";
        }

    }

    private async Task ClearSearch()
    {
        searchInput = "";
        users = await Task.Run(() => UserService.GetAllUsersWithRolesAsync());
        if (users.Count == 0)
        {
            displayMessage = "No Users Found";
        }
    }
}
