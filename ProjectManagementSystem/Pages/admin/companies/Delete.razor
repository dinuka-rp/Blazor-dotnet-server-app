@page "/companies/delete/{Id:guid}"

@attribute [Authorize(Roles = "Admin")]
@inject NavigationManager Navigation
@inject CompanyService CompanyService

@if (company == null)
{
    <p><em>@displayMessage</em></p>
}
else
{
    <h3>Are you sure you want to delete this Company?</h3>
    <hr />

    <dl class="row">
        <dt class="col-sm-2">
            Company Id
        </dt>
        <dd class="col-sm-10">
            @company.Id
        </dd>
        <dt class="col-sm-2">
            Company Name
        </dt>
        <dd class="col-sm-10">
            @company.Name
        </dd>

        <dt class="col-sm-2">
            Projects
        </dt>
        @if (company.Projects != null && company.Projects.Count != 0)
        {
            <dd class="col-sm-10">
                <ProjectsTable Projects="company.Projects" />
            </dd>
        }
        else
        {
            <dd class="col-sm-10 text-black-50">
                <em>None</em>
            </dd>
        }
    </dl>

    <button class="btn btn-danger" @onclick="DeleteCompany">
        <span class="oi oi-trash" aria-hidden="true"></span> Delete
    </button>
}


@code {
    [Parameter]
    public Guid Id { get; set; }

    public Company company { get; set; }
    public String displayMessage = "Loading Company Details";

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        company = await Task.Run(() => CompanyService.GetCompanyAsync(Id));
        if (company == null)
        {
            displayMessage = "Company with Id: " + Id + " Not Found";
        }
    }

    private async Task DeleteCompany()
    {
        await CompanyService.DeleteCompanyAsync(company);
        Navigation.NavigateTo("/companies");        // redirect to companies page
    }
}
