@page "/projects/details/{Id:guid}"

@attribute [Authorize(Roles = "Admin")]
@inject NavigationManager Navigation
@inject ProjectService ProjectService

<h3>Project Details</h3>

<hr />

@if (project == null)
{
    <p><em>@displayMessage</em></p>
}
else
{
    <dl class="row">
        <dt class="col-sm-2">Project Id</dt>
        <dd class="col-sm-10">@project.Id</dd>

        <dt class="col-sm-2">
            Project Code
        </dt>
        <dd class="col-sm-10">
            @project.Code
        </dd>
        <dt class="col-sm-2">
            Project Name
        </dt>
        <dd class="col-sm-10">
            @project.Name
        </dd>
        <dt class="col-sm-2">
            Project Description
        </dt>
        <dd class="col-sm-10">
            @project.Description
        </dd>

        <dt class="col-sm-2">
            Company
        </dt>
        @if (project.Company == null)
        {
            <dd class="col-sm-10">
                <em>Not Assigned</em>
            </dd>
        }
        else
        {
            <dd class="col-sm-10">
                @project.Company.Name
            </dd>
        }

        <dt class="col-sm-2">
            Assigned Users
        </dt>
        @if (project.Users == null)
        {
            <dd class="col-sm-10">
                <em>None</em>
            </dd>
        }
        else
        {
            @foreach (var user in project.Users)
            {
                <dd class="col-sm-10">
                    @user.FirstName
                </dd>
            }
        }
    </dl>
}
@code {
    [Parameter]
    public Guid Id { get; set; }

    public Project project { get; set; }
    public String displayMessage = "Loading Project Details";

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        project = await Task.Run(() => ProjectService.GetProjectAsync(Id));
        if (project == null)
        {
            displayMessage = "Project with Id: " + Id + " Not Found";
        }
    }
}
