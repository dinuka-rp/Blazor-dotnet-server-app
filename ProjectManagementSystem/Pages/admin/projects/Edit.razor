@page "/projects/edit/{Id:guid}"

@attribute [Authorize(Roles = "Admin")]
@inject NavigationManager Navigation
@inject ProjectService ProjectService

<h3>Edit Project</h3>
<hr />

@if (project == null)
{
    <p><em>@displayMessage</em></p>
}
else
{
    <EditForm Model="project" OnValidSubmit="@UpdateProject">
        <DataAnnotationsValidator />
        @* this will validate the input against the fields mentioned in the model *@

        <div class="form-group">
            <label for="description-input" class="control-label">* Project Code</label>
            <InputText id="description-input" class="form-control" @bind-Value="@project.Code"></InputText>
            <ValidationMessage For="@(() => project.Code)" />
        </div>
        <div class="form-group">
            <label for="description-input" class="control-label">Project Name</label>
            <InputText id="description-input" class="form-control" @bind-Value="@project.Name"></InputText>
            <ValidationMessage For="@(() => project.Name)" />
        </div>
        <div class="form-group">
            <label for="description-input" class="control-label">Project Description</label>
            <InputText id="description-input" class="form-control" @bind-Value="@project.Description"></InputText>
            <ValidationMessage For="@(() => project.Description)" />
        </div>

        <div>
            @* load companies onenter in above search *@
            @*@bind-value="companyToAdd" @bind-value:event="oninput"*@

            @* add users to project from here? *@
        </div>

        <NavLink class="btn btn-outline-secondary" href="projects">
            <span aria-hidden="true">Cancel</span>
        </NavLink>

        <button type="submit" class="btn btn-primary">Create Project</button>
    </EditForm>
}

@code {
    [Parameter]
    public Guid Id { get; set; }

    private Project project { get; set; } = new Project();
    public String displayMessage = "Loading Project Details";

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        project = await Task.Run(() => ProjectService.GetProjectAsync(Id));
        if (project == null)
        {
            displayMessage = "Project with Id: " + Id + " Not Found";
        }
    }

    protected async void UpdateProject()
    {
        await ProjectService.UpdateProjectAsync(project);
        Navigation.NavigateTo("projects");
    }
}