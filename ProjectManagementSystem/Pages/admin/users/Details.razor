@page "/users/details/{Id}"

@attribute [Authorize(Roles = "Admin")]
@inject NavigationManager Navigation
@inject UserService UserService

<h3>User Details</h3>

<hr />

@if (user == null)
{
    <p><em>@displayMessage</em></p>
}
else
{
<dl class="row">
    <dt class="col-sm-2">
        User Id
    </dt>
    <dd class="col-sm-10">
        @user.Id
    </dd>
    <dt class="col-sm-2">
        Username
    </dt>
    <dd class="col-sm-10">
        @user.UserName
    </dd>
    <dt class="col-sm-2">
        First Name
    </dt>
    <dd class="col-sm-10">
        @user.FirstName
    </dd>
    <dt class="col-sm-2">
        Last Name
    </dt>
    <dd class="col-sm-10">
        @user.LastName
    </dd>
    <dt class="col-sm-2">
        User Role
    </dt>
    @if (user.UserRoles.Count == 0)
    {
        <dd class="col-sm-10 text-black-50">
            Not Assigned
        </dd>
    }
    else
    {
        <dd class="col-sm-10">
            @foreach (var val in user.UserRoles)
            {
                @val.Role.Name<span>&nbsp;&nbsp;</span>
            }
        </dd>
    }


    <dt class="col-sm-2">
        Assigned Projects
    </dt>
    @if (user.Projects != null && user.Projects.Count != 0)
    {
        <dd class="col-sm-10">
            <ProjectsTable Projects="user.Projects" />
        </dd>
    }
    else
    {
        <dd class="col-sm-10 text-black-50">
            <em>None</em>
        </dd>
    }

    <dt class="col-sm-2">
        Assigned Tickets
    </dt>
    @if (user.Tickets != null && user.Tickets.Count != 0)
    {
        <dd class="col-sm-10">
            <TicketsTable Tickets="user.Tickets" />
        </dd>
    }
    else
    {
        <dd class="col-sm-10 text-black-50">
            <em>None</em>
        </dd>
    }
</dl>

    <a class="btn btn-outline-secondary" href="users/edit/@user.Id">
        <span class="oi oi-pencil" aria-hidden="true"> Edit User</span>
    </a>
}

@code {
    [Parameter]
    public String Id { get; set; }
    public ApplicationUser user { get; set; }

    public String displayMessage = "Loading User Details";

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        user = await Task.Run(() => UserService.GetUserAsync(Id));
        if (user == null)
        {
            displayMessage = "User with Id: " + Id + " Not Found";
        }
    }
}
